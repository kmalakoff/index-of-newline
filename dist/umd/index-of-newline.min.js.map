{"version":3,"file":"index-of-newline.min.js","sources":["../../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(string: string, offset = 0, includeLength = false): number | number[] {\n  if (offset < 0) throw new Error('Unexpected negative offset');\n  if (offset > string.length) throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === '\\n') return includeLength ? [offset, 1] : offset;\n    if (value === '\\r') {\n      return includeLength ? [offset, string[offset + 1] === '\\n' ? 2 : 1] : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["string","offset","arguments","includeLength","length","Error","concat","value"],"mappings":"sPAQe,SAAwBA,OAAgBC,EAAAA,0CAASC,UAAA,GAAA,EAAGC,EAAAA,UAAqBC,OAAA,QAAA,IAAAF,UAAA,IAAAA,UAAA,GACtF,GAAID,EAAS,EAAG,MAAM,IAAII,MAAM,8BAChC,GAAIJ,EAASD,EAAOI,OAAQ,MAAM,IAAIC,MAAO,6CAA+DL,OAAnBC,EAAO,cAA0BK,OAAdN,EAAOI,SAEnH,KAAOH,EAASD,EAAOI,QAAQ,CAC7B,IAAMG,EAAQP,EAAOC,GACrB,GAAc,OAAVM,EAAgB,OAAOJ,EAAgB,CAACF,EAAS,GAAIA,EACzD,GAAc,OAAVM,EACF,OAAOJ,EAAgB,CAACF,EAA+B,OAAvBD,EAAOC,EAAS,GAAc,EAAI,GAAKA,EAEzEA,GACD,CACD,OAAOE,EAAgB,EAAE,EAAI,IAAK"}
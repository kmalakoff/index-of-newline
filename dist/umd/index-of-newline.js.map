{"version":3,"file":"index-of-newline.js","sources":["../../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(string: string, offset = 0, includeLength = false): number | number[] {\n  if (offset < 0) throw new Error('Unexpected negative offset');\n  if (offset > string.length) throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === '\\n') return includeLength ? [offset, 1] : offset;\n    else if (value === '\\r') {\n      return includeLength ? [offset, string[offset + 1] === '\\n' ? 2 : 1] : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value"],"mappings":";;;;;;EAAA;;;;;;;EAOG,IACY,SAASA,cAAc,CAACC,MAAc,EAAwD;UAAtDC,MAAM,GAANA,+CAAU,GAAD,SAAA,CAAA,CAAA,CAAA,GAAA,CAAC,EAAEC,aAAa,GAAbA,SAAqB,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK,CAAA;MACtF,IAAID,MAAM,GAAG,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC,CAAC;MAC9D,IAAIF,MAAM,GAAGD,MAAM,CAACI,MAAM,EAAE,MAAM,IAAID,KAAK,CAAE,4CAA0C,CAAqBH,MAAa,CAAhCC,MAAM,EAAC,YAAU,CAAgB,CAAA,MAAA,CAAdD,MAAM,CAACI,MAAM,CAAE,CAAC,CAAC;EAE7H,IAAA,MAAOH,MAAM,GAAGD,MAAM,CAACI,MAAM,CAAE;EAC7B,QAAA,IAAMC,KAAK,GAAGL,MAAM,CAACC,MAAM,CAAC,CAAC;EAC7B,QAAA,IAAII,KAAK,KAAK,IAAI,EAAE,OAAOH,aAAa,GAAG;cAACD,MAAM;EAAE,YAAC,CAAA;EAAC,SAAA,GAAGA,MAAM,CAAC;eAC3D,IAAII,KAAK,KAAK,IAAI,EAAE;EACvB,YAAA,OAAOH,aAAa,GAAG;kBAACD,MAAM;kBAAED,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAAC,aAAA,GAAGA,MAAM,CAAC;EAC/E,SAAA;EACDA,QAAAA,MAAM,EAAE,CAAC;EACV,KAAA;EACD,IAAA,OAAOC,aAAa,GAAG;EAAC,QAAA,CAAC,CAAC;EAAE,QAAC,CAAA;OAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;"}
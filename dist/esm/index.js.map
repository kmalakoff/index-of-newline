{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(string: string, offset = 0, includeLength = false): number | number[] {\n  if (offset < 0) throw new Error(\"Unexpected negative offset\");\n  if (offset > string.length)\n    throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === \"\\n\") return includeLength ? [offset, 1] : offset;\n    else if (value === \"\\r\") {\n      return includeLength ? [offset, string[offset + 1] === \"\\n\" ? 2 : 1] : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value"],"mappings":"AAQe,SAASA,EAAeC,EAAgBC,EAAS,EAAGC,GAAgB,MAC7ED,EAAS,EAAG,MAAM,IAAIE,MAAM,iCAC5BF,EAASD,EAAOI,OAClB,MAAM,IAAID,MAAO,6CAA4CF,cAAmBD,EAAOI,eAElFH,EAASD,EAAOI,QAAQ,OACvBC,EAAQL,EAAOC,MACP,OAAVI,EAAgB,OAAOH,EAAgB,CAACD,EAAQ,GAAKA,EACpD,GAAc,OAAVI,SACAH,EAAgB,CAACD,EAA+B,OAAvBD,EAAOC,EAAS,GAAc,EAAI,GAAKA,EAEzEA,WAEKC,EAAgB,EAAE,EAAG,IAAM"}
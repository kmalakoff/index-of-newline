{"version":3,"sources":["index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(string: string, offset = 0, includeLength = false): number | number[] {\n  if (offset < 0) throw new Error('Unexpected negative offset');\n  if (offset > string.length) throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === '\\n') return includeLength ? [offset, 1] : offset;\n    if (value === '\\r') {\n      return includeLength ? [offset, string[offset + 1] === '\\n' ? 2 : 1] : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value"],"mappings":"AAAA;;;;;;;CAOC,GACD,eAAe,SAASA,cAAc,CAACC,MAAc,EAAEC,MAAM,GAAG,CAAC,EAAEC,aAAa,GAAG,KAAK,EAAqB;IAC3G,IAAID,MAAM,GAAG,CAAC,EAAE,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAC9D,IAAIF,MAAM,GAAGD,MAAM,CAACI,MAAM,EAAE,MAAM,IAAID,KAAK,CAAC,CAAC,0CAA0C,EAAEF,MAAM,CAAC,UAAU,EAAED,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;IAE7H,MAAOH,MAAM,GAAGD,MAAM,CAACI,MAAM,CAAE;QAC7B,MAAMC,KAAK,GAAGL,MAAM,CAACC,MAAM,CAAC,AAAC;QAC7B,IAAII,KAAK,KAAK,IAAI,EAAE,OAAOH,aAAa,GAAG;YAACD,MAAM;AAAE,aAAC;SAAC,GAAGA,MAAM,CAAC;QAChE,IAAII,KAAK,KAAK,IAAI,EAAE;YAClB,OAAOH,aAAa,GAAG;gBAACD,MAAM;gBAAED,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;aAAC,GAAGA,MAAM,CAAC;SAC/E;QACDA,MAAM,EAAE,CAAC;KACV;IACD,OAAOC,aAAa,GAAG;QAAC,CAAC,CAAC;AAAE,SAAC;KAAC,GAAG,CAAC,CAAC,CAAC;CACrC,CAAA"}
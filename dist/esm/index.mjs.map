{"version":3,"sources":["index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(string: string, offset = 0, includeLength = false): number | number[] {\n  if (offset < 0) throw new Error('Unexpected negative offset');\n  if (offset > string.length) throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === '\\n') return includeLength ? [offset, 1] : offset;\n    if (value === '\\r') {\n      return includeLength ? [offset, string[offset + 1] === '\\n' ? 2 : 1] : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value"],"mappings":"AAAA;;;;;;;CAOC,GACD,eAAe,SAASA,eAAeC,MAAc,EAAEC,SAAS,CAAC,EAAEC,gBAAgB,KAAK;IACtF,IAAID,SAAS,GAAG,MAAM,IAAIE,MAAM;IAChC,IAAIF,SAASD,OAAOI,MAAM,EAAE,MAAM,IAAID,MAAM,CAAC,0CAA0C,EAAEF,OAAO,UAAU,EAAED,OAAOI,MAAM,CAAC,CAAC;IAE3H,MAAOH,SAASD,OAAOI,MAAM,CAAE;QAC7B,MAAMC,QAAQL,MAAM,CAACC,OAAO;QAC5B,IAAII,UAAU,MAAM,OAAOH,gBAAgB;YAACD;YAAQ;SAAE,GAAGA;QACzD,IAAII,UAAU,MAAM;YAClB,OAAOH,gBAAgB;gBAACD;gBAAQD,MAAM,CAACC,SAAS,EAAE,KAAK,OAAO,IAAI;aAAE,GAAGA;QACzE;QACAA;IACF;IACA,OAAOC,gBAAgB;QAAC,CAAC;QAAG;KAAE,GAAG,CAAC;AACpC"}
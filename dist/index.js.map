{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns when true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */\nexport default function indexOfNewline(\n  string: string,\n  offset = 0,\n  includeLength = false\n): number | number[] {\n  if (offset < 0) throw new Error(\"Unexpected negative offset\");\n  if (offset > string.length)\n    throw new Error(\n      `Offset is longer than the string. Offset: ${offset}. String: ${string.length}`\n    );\n\n  while (offset < string.length) {\n    const value = string[offset];\n    if (value === \"\\n\") return includeLength ? [offset, 1] : offset;\n    else if (value === \"\\r\") {\n      return includeLength\n        ? [offset, string[offset + 1] === \"\\n\" ? 2 : 1]\n        : offset;\n    }\n    offset++;\n  }\n  return includeLength ? [-1, 0] : -1;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value"],"mappings":"SAQwBA,EACtBC,EACAC,EACAC,GAEA,YAHAD,IAAAA,EAAS,YACTC,IAAAA,GAAgB,GAEZD,EAAS,EAAG,UAAUE,MAAM,8BAChC,GAAIF,EAASD,EAAOI,OAClB,UAAUD,mDACqCF,eAAmBD,EAAOI,QAG3E,KAAOH,EAASD,EAAOI,QAAQ,CAC7B,IAAMC,EAAQL,EAAOC,GACrB,GAAc,OAAVI,EAAgB,OAAOH,EAAgB,CAACD,EAAQ,GAAKA,KACtC,OAAVI,EACP,OAAOH,EACH,CAACD,EAA+B,OAAvBD,EAAOC,EAAS,GAAc,EAAI,GAC3CA,EAENA,IAEF,OAAOC,EAAgB,EAAE,EAAG,IAAM"}